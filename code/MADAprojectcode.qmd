---
title: "The Impact of Malaria Episodes and Treatment Regimens on Adverse Pregnancy Outcomes in Ugandan Women"
author: "Asmith Joseph"
date: "2025-02-23"
output: html_document
---

  

# Setup

```{r}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
library(tidyverse)
library(janitor)
library(knitr)
library(lubridate)
library(readr)
library(pwr)
library(glue)
```



```{r}
# Read the CSV file using here()
PROMO_Data <- read_csv(here("PROMO_Data.csv"))

# View the dataset
View(PROMO_Data)
```





```{r}
# Get the number of rows (observations) and columns (variables)
num_rows <- nrow(PROMO_Data)
num_columns <- ncol(PROMO_Data)

# Print the results
cat("Number of Observations (Rows):", num_rows, "\n")
cat("Number of Variables (Columns):", num_columns, "\n")

```



```{r}
# List all variable names
cat("List of Variables:\n")
print(colnames(PROMO_Data))
```



```{r}
# Display the data type of each variable
cat("Data Types of Each Variable:\n")
print(sapply(PROMO_Data, class))

```





```{r}

# Count of missing values in each variable
missing_values_per_column <- colSums(is.na(PROMO_Data))

# Display columns with missing data
cat("Missing Values per Variable:\n")
print(missing_values_per_column)
```




```{r}
#3. Initial Data Inspection
# View structure of the dataset
str(PROMO_Data)
```



```{r}
# View first few rows
head(PROMO_Data)
```



```{r}
# Check column names
colnames(PROMO_Data)
```



```{r}

# Get summary statistics
summary(PROMO_Data)
```




```{r}
# Count missing values in each column
colSums(is.na(PROMO_Data))

```


```{r}
# 3. Power analysis for comparing two independent groups (SP vs DP)
# Assuming a medium effect size (Cohen's d = 0.5)
# Alpha = 0.05, Power = 0.8

# Check available sample size using the correct dataframe
available_sample_size <- nrow(PROMO_Data)
cat("Available Sample Size:", available_sample_size, "\n")

# Check if the available sample size is sufficient
if (available_sample_size >= power_result$n) {
  cat("Sufficient sample size for detecting medium effect size.\n")
} else {
  cat("Sample size may be insufficient for detecting medium effect size.\n")
}
```



```{r}
# Define exposure and outcome variables
key_variables <- c(
  # Maternal health factors
  "Preeclampsia..HP_0100602.",
  "Postpartum.hemmorhage.after.spontaneous.vaginal.delivery..EUPATH_0042128.",
  "Hemorrhage.after.caesarean.section..EUPATH_0042084.",
  "Preterm.birth..ONTONEO_00000271.",
  "Infant.low.birth.weight...2500.g...EUPATH_0042398.",
  "Small.for.gestational.age..HP_0001518.",
  "Blood.transfusion..EUPATH_0042173.",
  
  # Infant health outcomes
  "Study.arm..EUPATH_0015457.",
  "Neonatal.death..HP_0003811."
)

```






```{r}
# Descriptive statistics for key continuous variables
library(dplyr)

# List of main numeric variables
numeric_vars <- c(
  "Total.malaria.episodes.during.pregnancy..EUPATH_0042235.",
  "Malaria.infection.rate.during.pregnancy..per.person.year...EUPATH_0042237."
)

# Generate summary statistics
numeric_summary <- PROMO_Data %>%
  select(all_of(numeric_vars)) %>%
  summary()

# Print summary
print(numeric_summary)

```






```{r}
# Descriptive stats for categorical variables
categorical_vars <- c(
  "Study.arm..EUPATH_0015457.",  # SP vs DP
  "Preterm.birth..ONTONEO_00000271.",
  "Stillbirth..HP_0003826.",
  "Infant.low.birth.weight...2500.g...EUPATH_0042398.",
  "Neonatal.death..HP_0003811.",
  "Placental.malaria..EUPATH_0042117."
)

# Count occurrences
categorical_summary <- PROMO_Data %>%
  select(all_of(categorical_vars)) %>%
  summarise(across(everything(), ~ sum(!is.na(.))))  # Non-missing counts

# Print counts
print(categorical_summary)

```


```{r}
# Histogram for malaria episodes during pregnancy
library(ggplot2)

ggplot(PROMO_Data, aes(x = Total.malaria.episodes.during.pregnancy..EUPATH_0042235.)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Distribution of Malaria Episodes During Pregnancy", x = "Number of Episodes", y = "Frequency")

```




```{r}
# Bar plot for treatment arms
ggplot(PROMO_Data, aes(x = Study.arm..EUPATH_0015457.)) +
  geom_bar(fill = "green", color = "black") +
  labs(title = "Distribution of Treatment Arms (SP vs. DP)", x = "Treatment Arm", y = "Count")

```







```{r}
# Boxplot for malaria infection rates across treatment arms
ggplot(PROMO_Data, aes(x = Study.arm..EUPATH_0015457., y = Malaria.infection.rate.during.pregnancy..per.person.year...EUPATH_0042237.)) +
  geom_boxplot(fill = "orange") +
  labs(title = "Malaria Infection Rate by Treatment Arm", x = "Treatment Arm", y = "Infection Rate (per person-year)")

```








```{r}
# Cross-tabulation of treatment arm vs. outcomes
cross_tab <- table(
  PROMO_Data$Study.arm..EUPATH_0015457.,
  PROMO_Data$Preterm.birth..ONTONEO_00000271.
)

# Print cross-tab
print(cross_tab)

```



```{r}
# Placental malaria vs. low birth weight
placental_vs_birth_weight <- table(
  PROMO_Data$Placental.malaria..EUPATH_0042117.,
  PROMO_Data$Infant.low.birth.weight...2500.g...EUPATH_0042398.
)

# Print the cross-tab
print(placental_vs_birth_weight)

```




```{r}
# Visualizing missing data
library(Amelia)

missmap(PROMO_Data, main = "Missing Data Map", col = c("red", "grey"), legend = TRUE)

```




```{r}
# Replace missing values with NA
PROMO_Data_clean <- PROMO_Data %>%
  filter(
    !is.na(Study.arm..EUPATH_0015457.),
    !is.na(Preterm.birth..ONTONEO_00000271.),
    !is.na(Stillbirth..HP_0003826.),
    !is.na(Infant.low.birth.weight...2500.g...EUPATH_0042398.)
  )

# Create a descriptive summary table
summary_table <- PROMO_Data_clean %>%
  select(
    Study.arm..EUPATH_0015457.,  # Treatment Arm (SP vs DP)
    Preterm.birth..ONTONEO_00000271.,  # Preterm Birth
    Stillbirth..HP_0003826.,  # Stillbirth
    Infant.low.birth.weight...2500.g...EUPATH_0042398.,  # Low Birth Weight
    Total.malaria.episodes.during.pregnancy..EUPATH_0042235.,  # Malaria Episodes
    Malaria.infection.rate.during.pregnancy..per.person.year...EUPATH_0042237.  # Infection Rate
  ) %>%
  tbl_summary(
    by = Study.arm..EUPATH_0015457.,  # Group by treatment arm
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",  # Mean and SD for continuous
      all_categorical() ~ "{n} / {N} ({p}%)"  # Count and percentage for categorical
    ),
    missing = "ifany"
  ) %>%
  add_overall() %>%
  modify_header(label = "**Characteristic**") %>%
  modify_spanning_header(all_stat_cols() ~ "**n/N (%) or mean (SD)**") %>%
  as_gt()  # Convert to GT table


```






```{r}
# Create a characteristics table
characteristics_table <- PROMO_Data %>%
  select(
    Study.arm..EUPATH_0015457.,  # Treatment Arm (SP vs DP)
    Preterm.birth..ONTONEO_00000271.,  # Preterm Birth
    Stillbirth..HP_0003826.,  # Stillbirth
    Infant.low.birth.weight...2500.g...EUPATH_0042398.,  # Low Birth Weight
    Total.malaria.episodes.during.pregnancy..EUPATH_0042235.,  # Malaria Episodes
    Malaria.infection.rate.during.pregnancy..per.person.year...EUPATH_0042237.  # Malaria Infection Rate
  ) %>%
  tbl_summary(
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",  # Mean (SD) for continuous variables
      all_categorical() ~ "{n} / {N} ({p}%)"  # Count and percentage for categorical variables
    ),
    missing = "ifany",  # Report missing values
    label = list(
      Study.arm..EUPATH_0015457. ~ "Treatment Arm (SP vs. DP)",
      Preterm.birth..ONTONEO_00000271. ~ "Preterm Birth",
      Stillbirth..HP_0003826. ~ "Stillbirth",
      Infant.low.birth.weight...2500.g...EUPATH_0042398. ~ "Low Birth Weight",
      Total.malaria.episodes.during.pregnancy..EUPATH_0042235. ~ "Number of Malaria Episodes",
      Malaria.infection.rate.during.pregnancy..per.person.year...EUPATH_0042237. ~ "Malaria Infection Rate"
    )
  ) %>%
  add_overall() %>%  # Add overall summary column
  modify_header(label = "**Characteristic**") %>%  # Customize column header
  modify_spanning_header(all_stat_cols() ~ "**n/N (%) or mean (SD)**") %>%  # Custom statistics label
  as_gt()  # Convert to a nicely formatted table using gt

```


























Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed-data","processeddata.rds")
#load data
mydata <- readRDS(data_location)
```





# Data exploration through tables

Showing a bit of code to produce and save a summary table.


```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results", "tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```

We are saving the results to the `results` folder. Depending on how many tables/figures you have, it might make sense to have separate folders for each. And/or you could have separate folders for exploratory tables/figures and for final tables/figures. Just choose a setup that makes sense for your project and works for you, and provide enough documentation that someone can understand what you are doing.


# Data exploration through figures

Histogram plots for the continuous outcomes. 

Height first.

```{r}
p1 <- mydata %>% ggplot(aes(x=Height)) + geom_histogram() 
plot(p1)
figure_file = here("results", "figures","height-distribution.png")
ggsave(filename = figure_file, plot=p1) 
```

Now weights.

```{r}
p2 <- mydata %>% ggplot(aes(x=Weight)) + geom_histogram() 
plot(p2)
figure_file = here("results", "figures","weight-distribution.png")
ggsave(filename = figure_file, plot=p2) 
```

Now height as function of weight.

```{r}
p3 <- mydata %>% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')
plot(p3)
figure_file = here("results", "figures", "height-weight.png")
ggsave(filename = figure_file, plot=p3) 
```

Once more height as function of weight, stratified by gender. Note that there is so little data, it's a bit silly. But we'll plot it anyway.

```{r}
p4 <- mydata %>% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')
plot(p4)
figure_file = here("results", "figures", "height-weight-stratified.png")
ggsave(filename = figure_file, plot=p4) 
```



# Notes

For your own explorations, tables and figures can be "quick and dirty". As long as you can see what's going on, there is no need to polish them. That's in contrast to figures you'll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.


