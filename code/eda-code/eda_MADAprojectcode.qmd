---
title: "The Impact of Malaria Episodes and Treatment Regimens on Adverse Pregnancy Outcomes in Ugandan Women"
author: "Asmith Joseph"
date: "2025-02-23"
output: html_document
---



```{r}
# **1. Load Required Libraries**
# Essential libraries for data handling, visualization, and analysis

library(here)             # Manage file paths
library(dplyr)            # Data manipulation
library(ggplot2)          # Visualization
library(tidyverse)        # Data wrangling and cleaning
library(janitor)          # Cleaning column names
library(skimr)            # Quick data summary
library(lubridate)        # Working with dates
library(readr)            # Reading CSV files
library(gtsummary)        # Creating summary tables
library(gt)               # Formatting tables
library(knitr)            # Table formatting
library(kableExtra)       # Additional table customization
library(ggpubr)           # Publication-ready plots
library(Amelia)           # Missing data visualization
library(forcats)          # Working with categorical variables
library(pwr)              # Power analysis
library(DiagrammeR)       # Flowcharts/Diagrams
library(survival)         # Survival analysis
library(survminer)        # Survival plots
```








# Data Import & Initial Inspection 
```{r}
# Read the dataset
PROMO_Data <- read_csv(here("data", "raw-data", "PROMO_Data.csv"))

# **Dataset Overview**
cat("Number of Observations:", nrow(PROMO_Data), "\n")
cat("Number of Variables:", ncol(PROMO_Data), "\n")

# **Inspect Data Structure**
str(PROMO_Data)
head(PROMO_Data)

# **Check Missing Values**
missing_values <- colSums(is.na(PROMO_Data))
print(missing_values)

# **Summary Statistics**
summary(PROMO_Data)

```






# Data Cleaning & Transformation
```{r}
# Clean Column Names**
PROMO_Data <- PROMO_Data %>% clean_names()

# **Remove Empty Rows**
PROMO_Data <- PROMO_Data %>%
  filter(!is.na(study_arm), !is.na(stillbirth), !is.na(neonatal_death), !is.na(infant_low_birth_weight_2500_g))

# **Handle Missing Values**
PROMO_Data <- PROMO_Data %>%
  mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .))) %>%
  mutate(across(where(is.character), ~ replace_na(., "Unknown")))

# **Convert Data Types**
PROMO_Data <- PROMO_Data %>%
  mutate(across(c(study_arm, stillbirth, neonatal_death, placental_malaria, delivery_mode), as.factor)) %>%
  mutate(across(contains("date"), as.Date, format="%Y-%m-%d"))

# **Verify Changes**
str(PROMO_Data)

```






# Exploratory Data Analysis (EDA)

```{r}
# **Summary of Numeric Variables**
skim(PROMO_Data)

# **Frequency Counts of Key Categorical Variables**
PROMO_Data %>%
  count(study_arm, sort = TRUE)

PROMO_Data %>%
  count(placental_malaria, sort = TRUE)

PROMO_Data %>%
  count(preterm_birth_ontoneo, sort = TRUE)

```





# Characteristics Tables
*Baseline Characteristics Table*

```{r}
# Select key variables for baseline characteristics
baseline_vars <- c("study_arm", "education_level_omrse", "gravidity", "parity", 
                   "placental_malaria", "preterm_birth_ontoneo", "stillbirth", 
                   "neonatal_death", "infant_low_birth_weight_2500_g")

# **Ensure selected variables exist**
baseline_vars <- baseline_vars[baseline_vars %in% colnames(PROMO_Data)]

# Generate formatted table using gtsummary
baseline_characteristics <- PROMO_Data %>%
  select(all_of(baseline_vars)) %>%
  tbl_summary(by = study_arm) %>%
  add_p() %>%
  modify_header(label = "**Variable**") %>%
  bold_labels()

baseline_characteristics

```




*Continuous Characteristics by Study Arm*

```{r}
# Function to summarize continuous variables
summarize_continuous <- function(var) {
  sp_mean <- mean(PROMO_Data[[var]][PROMO_Data$study_arm == "Sulphadoxine-pyrimethamine (SP)"], na.rm = TRUE)
  sp_sd <- sd(PROMO_Data[[var]][PROMO_Data$study_arm == "Sulphadoxine-pyrimethamine (SP)"], na.rm = TRUE)
  
  dp_mean <- mean(PROMO_Data[[var]][PROMO_Data$study_arm == "Dihydroartemisinin-piperaquine (DP)"], na.rm = TRUE)
  dp_sd <- sd(PROMO_Data[[var]][PROMO_Data$study_arm == "Dihydroartemisinin-piperaquine (DP)"], na.rm = TRUE)
  
  p_value <- t.test(PROMO_Data[[var]] ~ PROMO_Data$study_arm, var.equal = TRUE, na.rm = TRUE)$p.value
  
  return(c(sprintf("%.1f (%.1f)", sp_mean, sp_sd),
           sprintf("%.1f (%.1f)", dp_mean, dp_sd),
           sprintf("%.3f", p_value)))
}

# Create summary table
summary_table <- tibble(
  Characteristic = c("Maternal Age (years)", "Gravidity", "Gestational Age at Delivery (weeks)", "Malaria Episodes During Pregnancy"),
  `SP (Mean ± SD)` = sapply(c("age_at_enrollment_years", "gravidity", "gestational_age_at_delivery_weeks", "total_malaria_episodes_during_pregnancy"), summarize_continuous)[1,],
  `DP (Mean ± SD)` = sapply(c("age_at_enrollment_years", "gravidity", "gestational_age_at_delivery_weeks", "total_malaria_episodes_during_pregnancy"), summarize_continuous)[2,],
  `p-value` = sapply(c("age_at_enrollment_years", "gravidity", "gestational_age_at_delivery_weeks", "total_malaria_episodes_during_pregnancy"), summarize_continuous)[3,]
)

# Display table using gt
summary_table %>%
  gt() %>%
  tab_header(title = md("**Table: Continuous Characteristics by Study Arm**")) %>%
  cols_align(align = "center") %>%
  tab_options(
    table.font.size = px(12),
    heading.title.font.size = px(14),
    table.border.top.style = "solid",
    table.border.bottom.style = "solid"
  )

```








```{r}
colnames(PROMO_Data)

```

























```{r}
# Load required libraries
# Load required libraries
library(dplyr)
library(gtsummary)

# Define malaria outcome variables
malaria_outcome_vars <- c(
  "total_malaria_episodes_during_pregnancy",
  "placental_malaria",
  "preterm_birth_ontoneo",
  "stillbirth",
  "infant_low_birth_weight_2500_g"
)

# Ensure that `study_arm` is in the dataset
if (!"study_arm" %in% colnames(PROMO_Data)) {
  stop("⚠️ Error: `study_arm` column not found in PROMO_Data. Please check column names.")
}

# Remove `stillbirth` and any other variable that has only one level
valid_outcomes <- malaria_outcome_vars[sapply(PROMO_Data[malaria_outcome_vars], function(x) length(unique(na.omit(x))) > 1)]

# Ensure `study_arm` is included in the selected variables
valid_outcomes <- c(valid_outcomes, "study_arm")

# Define label mappings dynamically based on valid variables
all_labels <- list(
  total_malaria_episodes_during_pregnancy ~ "Total Malaria Episodes (Mean ± SD)",
  placental_malaria ~ "Placental Malaria (Histology)",
  preterm_birth_ontoneo ~ "Preterm Birth",
  stillbirth ~ "Stillbirth",
  infant_low_birth_weight_2500_g ~ "Low Birth Weight (<2500g)"
)

dynamic_labels <- all_labels[names(all_labels) %in% valid_outcomes]

# Define a custom function to format p-values
format_pvalue <- function(pvals) {
  sapply(pvals, function(x) {
    if (is.na(x)) {
      return("NA")  # Handle missing values properly
    } else if (is.numeric(x)) {
      if (x < 0.001) {
        return("< 0.001")  # Report very small values as "< 0.001"
      } else if (x < 0.01) {
        return(format(round(x, 3), nsmall = 3))  # Report between 0.001 and 0.01 to three decimal places
      } else {
        return(format(round(x, 2), nsmall = 2))  # Report >= 0.01 to two decimal places
      }
    } else {
      return("NA")  # Return "NA" for non-numeric values
    }
  })
}

# Generate table with formatted p-values
if (nrow(PROMO_Data) > 0 && length(valid_outcomes) > 1) {
  
  malaria_outcomes_table <- PROMO_Data %>%
    select(all_of(valid_outcomes)) %>%
    tbl_summary(
      by = "study_arm",
      statistic = list(
        total_malaria_episodes_during_pregnancy ~ "{mean} ± {sd}",
        all_categorical() ~ "{n} ({p}%)"
      ),
      label = dynamic_labels
    ) %>%
    add_p(
      test = list(
        all_categorical() ~ "fisher.test",
        all_continuous() ~ "t.test"
      ),
      pvalue_fun = format_pvalue  # Apply the fixed p-value formatting function
    )
  
  # Print the updated table
  print(malaria_outcomes_table)

} else {
  message("⚠️ No data available for analysis or insufficient variability in variables.")
}
```






# Data Visualization

*Histogram: Malaria Episodes*

```{r}
ggplot(PROMO_Data, aes(x = total_malaria_episodes_during_pregnancy)) +
  geom_histogram(binwidth = 1, fill = "light blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Malaria Episodes During Pregnancy", 
       x = "Number of Malaria Episodes", 
       y = "Frequency") +
  theme_minimal()


```




*Histogram of Gestational Age at Delivery*
```{r}
ggplot(PROMO_Data, aes(x = gestational_age_at_delivery_weeks)) +
  geom_histogram(binwidth = 1, fill = "light blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Gestational Age at Delivery", 
       x = "Gestational Age (weeks)", 
       y = "Number of Births") +
  theme_minimal()

```




*Histogram of Infant Birth Weight*
```{r}
ggplot(PROMO_Data, aes(x = infant_birth_weight_kg)) +
  geom_histogram(binwidth = 0.2, fill = "green", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Infant Birth Weights", 
       x = "Birth Weight (kg)", 
       y = "Number of Infants") +
  theme_minimal()

```




*Histogram of Maternal Age*
```{r}
ggplot(PROMO_Data, aes(x = age_at_enrollment_years)) +
  geom_histogram(binwidth = 2, fill = "light blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Maternal Age at Enrollment", 
       x = "Maternal Age (years)", 
       y = "Number of Participants") +
  theme_minimal()

```




*Histogram of Malaria Episodes Stratified by Treatment Regimen (SP vs DP)*
```{r}
ggplot(PROMO_Data, aes(x = total_malaria_episodes_during_pregnancy, fill = study_arm)) +
  geom_histogram(binwidth = 1, color = "black", alpha = 0.7, position = "identity") +
  facet_wrap(~ study_arm) +
  labs(title = "Malaria Episodes Stratified by Treatment Regimen", 
       x = "Number of Malaria Episodes", 
       y = "Frequency") +
  theme_minimal()

```







*Boxplot: Gestational Age at Delivery*
```{r}
ggplot(PROMO_Data, aes(x = study_arm, y = gestational_age_at_delivery_weeks, fill = study_arm)) +
  geom_boxplot(alpha = 0.7) +
  labs(title = "Gestational Age at Delivery by Study Arm",
       x = "Study Arm", y = "Gestational Age (weeks)") +
  theme_minimal() +
  theme(legend.position = "none")

```


*Placental Malaria Prevalence by Study Arm*
```{r}
ggplot(PROMO_Data, aes(x = placental_malaria, fill = study_arm)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(title = "Placental Malaria Prevalence by Study Arm",
       x = "Placental Malaria", y = "Count") +
  theme_minimal()

```



*Stillbirth & Neonatal Death by Study Arm*
```{r}
ggplot(PROMO_Data, aes(x = study_arm, fill = stillbirth)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(title = "Stillbirth Rates by Study Arm", x = "Study Arm", y = "Count") +
  theme_minimal()
```




```{r}
ggplot(PROMO_Data, aes(x = study_arm, fill = neonatal_death)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(title = "Neonatal Mortality by Study Arm", x = "Study Arm", y = "Count") +
  theme_minimal()

```





# Statistical Analysis

*Chi-Square Test: Study Arm vs. Stillbirth*
```{r}
table_study_stillbirth <- table(PROMO_Data$study_arm, PROMO_Data$stillbirth)
chisq.test(table_study_stillbirth)

```


*Logistic Regression: Neonatal Death Prediction*
```{r}
logit_neonatal_death <- glm(neonatal_death ~ study_arm + total_malaria_episodes_during_pregnancy + gestational_age_at_delivery_weeks, 
                            data = PROMO_Data, family = binomial)

summary(logit_neonatal_death)

```






*Directed Acyclic Graph (DAG)*
```{r}
library(ggdag)
library(dagitty)

dag <- dagitty("dag {
  'Malaria Exposure' -> 'Placental Malaria'
  'Placental Malaria' -> 'Inflammation'
  'Inflammation' -> 'Pregnancy Outcomes'
  'Malaria Exposure' -> 'Pregnancy Outcomes'
  'Pregnancy Outcomes' -> 'Neonatal Health'
  'Treatment (SP vs. DP)' -> 'Malaria Exposure'
  'Treatment (SP vs. DP)' -> 'Pregnancy Outcomes'
}")

ggdag(dag, text = TRUE, use_labels = "name") +
  theme_minimal() +
  ggtitle("Directed Acyclic Graph (DAG) of Malaria in Pregnancy and Birth Outcomes")

```





*Kaplan-Meier Survival Curve*
```{r}
PROMO_Data$surv_obj <- Surv(PROMO_Data$gestational_age_at_enrollment_weeks, 
                             PROMO_Data$total_malaria_episodes_during_pregnancy > 0)

km_fit <- survfit(surv_obj ~ study_arm, data = PROMO_Data)

ggsurvplot(km_fit, data = PROMO_Data,
           conf.int = TRUE, pval = TRUE, risk.table = TRUE,
           legend.title = "Treatment Arm",
           ggtheme = theme_minimal(),
           title = "Time to Malaria Infection During Pregnancy")

```












