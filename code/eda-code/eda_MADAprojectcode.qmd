---
title: "The Impact of Malaria Episodes and Treatment Regimens on Adverse Pregnancy Outcomes in Ugandan Women"
author: "Asmith Joseph"
date: "2025-02-23"
output: html_document
---



```{r}
# **1. Load Required Libraries**
# Essential libraries for data handling, visualization, and analysis

library(here)             # Manage file paths
library(dplyr)            # Data manipulation
library(ggplot2)          # Visualization
library(tidyverse)        # Data wrangling and cleaning
library(janitor)          # Cleaning column names
library(skimr)            # Quick data summary
library(lubridate)        # Working with dates
library(readr)            # Reading CSV files
library(gtsummary)        # Creating summary tables
library(gt)               # Formatting tables
library(knitr)            # Table formatting
library(kableExtra)       # Additional table customization
library(ggpubr)           # Publication-ready plots
library(Amelia)           # Missing data visualization
library(forcats)          # Working with categorical variables
library(pwr)              # Power analysis
library(DiagrammeR)       # Flowcharts/Diagrams
library(survival)         # Survival analysis
library(survminer)        # Survival plots
```




# Data Import & Initial Inspection 
```{r}
# Data Import & Initial Inspection 
# load the Dataset
PROMO_Data <- read_csv(here("data", "raw-data", "PROMO_Data.csv"))

```



# Data Cleaning & Transformation
```{r}
#  Clean Column Names
PROMO_Data <- PROMO_Data %>%
  clean_names()  # Standardizes column names (lowercase, removes spaces/special characters)

#   Check for Missing Values
missing_summary <- colSums(is.na(PROMO_Data))
print("Missing Values Summary:")
print(missing_summary)

#  Handle Missing Values
PROMO_Data <- PROMO_Data %>%
  mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .))) %>%  # Replace NA in numeric columns with median
  mutate(across(where(is.character), ~ replace_na(., "Unknown")))  # Replace NA in categorical columns with "Unknown"

#   Convert Data Types
PROMO_Data <- PROMO_Data %>%
  mutate(across(c(study_arm, delivery_mode, education_level), as.factor)) %>% # Convert categorical columns to factors
  mutate(across(contains("date"), as.Date, format="%Y-%m-%d"))  # Convert date columns

#  Rename Key Variables for Clarity
PROMO_Data <- PROMO_Data %>%
  rename(
    `Study Arm` = study_arm,
    `Gestational Age at Enrollment (Weeks)` = gestational_age_at_enrollment_weeks,
    `Gestational Age at Delivery (Weeks)` = gestational_age_at_delivery,
    `Education Level` = education_level,
    `Detection of Malaria Parasites by Microscopy` = proportion_of_plasmodium_positive_blood_smears_during_pregnancy_by_microscopy,
    `Detection of Malaria Parasites by Microscopy or qPCR` = total_plasmodium_positive_routine_blood_smears_during_pregnancy
  )

#   Remove Duplicate Rows
PROMO_Data_Cleaned <- PROMO_Data %>%
  distinct()  # Removes exact duplicate rows

#  Step 7: Print Summary of Cleaned Data
summary(PROMO_Data_Cleaned)

#   Display Column Names to Verify
print("Updated Column Names:")
print(colnames(PROMO_Data_Cleaned))

```






```{r}
colnames(PROMO_Data_Cleaned)

```




# Exploratory Data Analysis (EDA)
```{r}
# Number of observations and variables
cat("Number of Observations:", nrow(PROMO_Data_Cleaned), "\n")
cat("Number of Variables:", ncol(PROMO_Data_Cleaned), "\n")

# View structure of dataset
str(PROMO_Data_Cleaned)

# Quick Summary Statistics
summary(PROMO_Data_Cleaned)

```






*Step 1: Fix Missing Data & Categorize Variables*
*Baseline Characteristics Table 1*
```{r}
library(dplyr)
library(gtsummary)

# ✅ Fix & Categorize Variables
PROMO_Data_Cleaned <- PROMO_Data_Cleaned %>%
  mutate(
    Age_Category = case_when(
      age_at_enrollment_years < 18 ~ "<18 (Minors)",
      age_at_enrollment_years >= 18 & age_at_enrollment_years <= 35 ~ "18–35 (Young Adults)",
      age_at_enrollment_years >= 36 & age_at_enrollment_years <= 55 ~ "36–55 (Middle-aged)",
      age_at_enrollment_years > 55 ~ ">55 (Older Adults)",
      TRUE ~ "Unknown"
    ),

    # ✅ Fix Education Level Categorization (Put "Unknown" Last)
    `Education Level` = case_when(
      `Education Level` %in% c("A level", "O level", "None") ~ "Secondary/No Formal Education",
      `Education Level` == "Primary" ~ "Primary",
      `Education Level` %in% c("Tertiary", "University") ~ "Tertiary/Higher Education",
      is.na(`Education Level`) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("Primary", "Secondary/No Formal Education", "Tertiary/Higher Education", "Unknown")),

    # ✅ Fix Gravidity Categorization (Put "Unknown" Last)
    Gravidity = case_when(
      gravidity == 1 ~ "1",
      gravidity == 2 ~ "2",
      gravidity >= 3 ~ "≥3",
      is.na(gravidity) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("1", "2", "≥3", "Unknown")),

    # ✅ Fix Parity Categorization (Put "Unknown" Last)
    Parity = case_when(
      parity == 1 ~ "1",
      parity == 2 ~ "2",
      parity >= 3 ~ "≥3",
      is.na(parity) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("1", "2", "≥3", "Unknown"))
  )
# ✅ Define Variables (Maternal Info First, Infant Last)
baseline_vars <- c(
  # **Maternal Information**
  "Age_Category", 
  "Education Level",
  "Gravidity", 
  "Parity", 
  "Gestational Age at Enrollment (Weeks)", 
  "Gestational Age at Delivery (Weeks)", 
  "placental_malaria", 
  "total_malaria_episodes_during_pregnancy", 
  "delivery_mode",

  # **Pregnancy Outcomes**
  "preterm_birth", 
  "small_for_gestational_age", 
  "spontaneous_abortion", 
  "stillbirth", 
  "neonatal_death",

  # **Infant Information**
  "infant_low_birth_weight_2500_g", 
  "infant_sex6"
)

# ✅ Ensure Variables Exist in the Dataset
baseline_vars <- baseline_vars[baseline_vars %in% colnames(PROMO_Data_Cleaned)]

# ✅ Create Updated Table (Remove Label Name)
baseline_table <- PROMO_Data_Cleaned %>%
  select(all_of(baseline_vars), `Study Arm`) %>%
  tbl_summary(
    by = `Study Arm`,
    statistic = all_categorical() ~ "{n} ({p}%)",
    missing = "no"
  ) %>%
  modify_header(label = "") %>% # Remove the label name
  bold_labels()

# ✅ Display Table
baseline_table
```





























```{r}
PROMO_Data_Cleaned <- PROMO_Data_Cleaned %>%
  mutate(
    Age_Category = case_when(
      age_at_enrollment_years < 18 ~ "<18 (Minors)",
      age_at_enrollment_years >= 18 & age_at_enrollment_years <= 35 ~ "18–35 (Young Adults)",
      age_at_enrollment_years >= 36 & age_at_enrollment_years <= 55 ~ "36–55 (Middle-aged)",
      age_at_enrollment_years > 55 ~ ">55 (Older Adults)",
      TRUE ~ "Unknown"
    ),

    # ✅ Fix Education Level Categorization (Include "Unknown")
    `Education Level` = case_when(
      `Education Level` %in% c("A level", "O level", "None") ~ "Secondary/No Formal Education",
      `Education Level` == "Primary" ~ "Primary",
      `Education Level` %in% c("Tertiary", "University") ~ "Tertiary/Higher Education",
      is.na(`Education Level`) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("Primary", "Secondary/No Formal Education", "Tertiary/Higher Education", "Unknown")),

    # ✅ Fix Gravidity Categorization (Include "Unknown")
    gravidity = case_when(
      gravidity == 1 ~ "1",
      gravidity == 2 ~ "2",
      gravidity >= 3 ~ "≥3",
      is.na(gravidity) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("1", "2", "≥3", "Unknown")),

    # ✅ Fix Parity Categorization (Include "Unknown")
    parity = case_when(
      parity == 1 ~ "1",
      parity == 2 ~ "2",
      parity >= 3 ~ "≥3",
      is.na(parity) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("1", "2", "≥3", "Unknown"))
  )





PROMO_Data_Cleaned <- PROMO_Data_Cleaned %>%
  mutate(
    Age_Category = case_when(
      age_at_enrollment_years < 18 ~ "<18 (Minors)",
      age_at_enrollment_years >= 18 & age_at_enrollment_years <= 35 ~ "18–35 (Young Adults)",
      age_at_enrollment_years >= 36 & age_at_enrollment_years <= 55 ~ "36–55 (Middle-aged)",
      age_at_enrollment_years > 55 ~ ">55 (Older Adults)",
      TRUE ~ "Unknown"
    ),

    # ✅ Fix Education Level Categorization (Include "Unknown")
    `Education Level` = case_when(
      `Education Level` %in% c("A level", "O level", "None") ~ "Secondary/No Formal Education",
      `Education Level` == "Primary" ~ "Primary",
      `Education Level` %in% c("Tertiary", "University") ~ "Tertiary/Higher Education",
      is.na(`Education Level`) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("Primary", "Secondary/No Formal Education", "Tertiary/Higher Education", "Unknown")),

    # ✅ Fix Gravidity Categorization (Include "Unknown")
    gravidity = case_when(
      gravidity == 1 ~ "1",
      gravidity == 2 ~ "2",
      gravidity >= 3 ~ "≥3",
      is.na(gravidity) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("1", "2", "≥3", "Unknown")),

    # ✅ Fix Parity Categorization (Include "Unknown")
    parity = case_when(
      parity == 1 ~ "1",
      parity == 2 ~ "2",
      parity >= 3 ~ "≥3",
      is.na(parity) ~ "Unknown",
      TRUE ~ "Unknown"
    ) %>% factor(levels = c("1", "2", "≥3", "Unknown"))
  )




# ✅ Define Baseline Characteristics Variables
baseline_vars <- c(
  # **Maternal Information First**
  "Age_Category", 
  "Education Level",
  "Gravidity", 
  "Parity", 
  "Gestational Age at Enrollment (Weeks)", 
  "Gestational Age at Delivery (Weeks)", 
  "placental_malaria", 
  "total_malaria_episodes_during_pregnancy", 
  "delivery_mode",

  # **Pregnancy Outcomes**
  "preterm_birth", 
  "small_for_gestational_age", 
  "spontaneous_abortion", 
  "stillbirth", 
  "neonatal_death",

  # **Infant Information**
  "infant_low_birth_weight_2500_g", 
  "infant_sex6"
)

# ✅ Ensure Variables Exist in the Dataset
baseline_vars <- baseline_vars[baseline_vars %in% colnames(PROMO_Data_Cleaned)]

# ✅ Create Updated Baseline Characteristics Table
baseline_table <- PROMO_Data_Cleaned %>%
  select(all_of(baseline_vars), `Study Arm`) %>%
  tbl_summary(
    by = `Study Arm`,
    statistic = all_categorical() ~ "{n} ({p}%)",
    missing = "no"
  ) %>%
  modify_header(label = "**Baseline Characteristics**") %>%
  bold_labels()

# ✅ Display the Table
baseline_table



```





















```{r}
# Load required packages
library(dplyr)
library(gtsummary)

# ✅ Step 1: Categorize Age into Clinically Meaningful Groups
PROMO_Data_Cleaned <- PROMO_Data_Cleaned %>%
  mutate(
    # ✅ Age Category
    Age_Category = case_when(
      age_at_enrollment_years < 18 ~ "<18 (Minors)",
      age_at_enrollment_years >= 18 & age_at_enrollment_years <= 35 ~ "18–35 (Young Adults)",
      age_at_enrollment_years >= 36 & age_at_enrollment_years <= 55 ~ "36–55 (Middle-aged)",
      age_at_enrollment_years > 55 ~ ">55 (Older Adults)",
      TRUE ~ NA_character_
    ),

    # ✅ Fix Education Level Categorization (Ensuring it’s Correct)
    Education_Level = case_when(
      `Education Level` %in% c("A level", "O level", "None") ~ "Secondary/No Formal Education",
      `Education Level` %in% c("Primary") ~ "Primary",
      `Education Level` %in% c("Tertiary", "University") ~ "Tertiary/Higher Education",
      TRUE ~ NA_character_
    ),

    # Convert to Factor with Proper Levels
    Education_Level = factor(Education_Level, levels = c("Primary", "Secondary/No Formal Education", "Tertiary/Higher Education")),

    # ✅ Categorize Gravidity
    Gravidity = factor(case_when(
      gravidity == 1 ~ "1",
      gravidity == 2 ~ "2",
      gravidity >= 3 ~ "≥3",
      TRUE ~ NA_character_
    ), levels = c("1", "2", "≥3")),

    # ✅ Categorize Parity
    Parity = factor(case_when(
      parity == 1 ~ "1",
      parity == 2 ~ "2",
      parity >= 3 ~ "≥3",
      TRUE ~ NA_character_
    ), levels = c("1", "2", "≥3"))
  )

# ✅ Step 2: Define the 16 Key Variables for the Table
baseline_vars <- c(
  # 🟢 **Mother's Demographics & Reproductive History**
  "Age_Category", 
  "Education_Level",  # ✅ Fixed Education Level Here
  "Gravidity",
  "Parity",
  "Gestational Age at Enrollment (Weeks)", 
  "Gestational Age at Delivery (Weeks)", 
  "Placental_malaria", 
  "Total_malaria_episodes_during_pregnancy",
  "Study Arm",  # Treatment assignment (SP vs DP)
  "Delivery_mode", 

  # 🟡 **Pregnancy & Birth Outcomes**
  "Preterm_birth", 
  "Small_for_gestational_age", 
  "Spontaneous_abortion", 
  "Stillbirth", 
  "Neonatal_death", 

  # 🔵 **Infant Birth Outcomes**
  "Infant_low_birth_weight_2500_g", 
  "Infant_sex6"
)

# ✅ Step 3: Ensure Variables Exist in the Dataset
baseline_vars <- baseline_vars[baseline_vars %in% colnames(PROMO_Data_Cleaned)]

# ✅ Step 4: Confirm Total Variables
cat("Total Variables Selected:", length(baseline_vars), "\n")  # Should output 16

# ✅ Step 5: Create the Baseline Characteristics Table
baseline_table <- PROMO_Data_Cleaned %>%
  select(all_of(baseline_vars), `Study Arm`) %>%
  tbl_summary(
    by = `Study Arm`,
    statistic = all_categorical() ~ "{n} ({p}%)",
    missing = "no"
  ) %>%
  modify_header(label = "**Baseline Characteristics**") %>%
  bold_labels()

# ✅ Step 6: Display the Table
baseline_table


```




# Data Visualization

*Figure 1: Pregnancy Outcomes by Study Arm*
```{r}
# Load required packages
library(ggplot2)
library(dplyr)
library(tidyr)

# Ensure correct column name for Study Arm
study_arm_col <- "Study Arm"

# Define pregnancy outcomes
pregnancy_outcomes <- c("preterm_birth", "stillbirth", "neonatal_death")

# Reshape data for plotting
pregnancy_data <- PROMO_Data_Cleaned %>%
  select(all_of(study_arm_col), all_of(pregnancy_outcomes)) %>%
  pivot_longer(cols = all_of(pregnancy_outcomes), names_to = "Outcome", values_to = "Present") %>%
  filter(!is.na(Present)) %>%  # Remove missing values
  group_by(across(all_of(study_arm_col)), Outcome, Present) %>%
  summarise(Total = n(), .groups = "drop")

# Convert outcome values to categorical (if numeric)
pregnancy_data$Present <- factor(pregnancy_data$Present, levels = c(0, 1), labels = c("Absent", "Present"))

# Plot Pregnancy Outcomes by Study Arm
ggplot(pregnancy_data, aes(x = Outcome, y = Total, fill = !!sym(study_arm_col))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Pregnancy Outcomes by Study Arm",
       x = "Pregnancy Outcome",
       y = "Total Count",
       fill = "Study Arm") +
  theme_minimal() +
  scale_fill_manual(values = c("lightblue", "pink")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```



*Placental Malaria by Study Arm*
```{r}
# Group and summarize data for placental malaria
# Ensure correct column name for Study Arm
study_arm_col <- "Study Arm"

# Group and summarize data for placental malaria
placental_malaria_data <- PROMO_Data_Cleaned %>%
  group_by(across(all_of(study_arm_col)), placental_malaria) %>%
  summarise(Count = n(), .groups = "drop")

# Convert placental malaria values to categorical (if numeric)
placental_malaria_data$placental_malaria <- factor(placental_malaria_data$placental_malaria, 
                                                   levels = c(0, 1), 
                                                   labels = c("No", "Yes"))

# Plot Placental Malaria by Study Arm
ggplot(placental_malaria_data, aes(x = placental_malaria, y = Count, fill = !!sym(study_arm_col))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Placental Malaria by Study Arm",
       x = "Placental Malaria",
       y = "Total Count",
       fill = "Study Arm") +
  theme_minimal() +
  scale_fill_manual(values = c("lightblue", "lightgreen")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```










```{r}
# Load required libraries
library(dplyr)
library(gtsummary)







































# Data Visualization

*Histogram: Malaria Episodes*

```{r}
ggplot(PROMO_Data, aes(x = total_malaria_episodes_during_pregnancy)) +
  geom_histogram(binwidth = 1, fill = "light blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Malaria Episodes During Pregnancy", 
       x = "Number of Malaria Episodes", 
       y = "Frequency") +
  theme_minimal()


```




*Histogram of Gestational Age at Delivery*
```{r}
ggplot(PROMO_Data, aes(x = gestational_age_at_delivery_weeks)) +
  geom_histogram(binwidth = 1, fill = "light blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Gestational Age at Delivery", 
       x = "Gestational Age (weeks)", 
       y = "Number of Births") +
  theme_minimal()

```




*Histogram of Infant Birth Weight*
```{r}
ggplot(PROMO_Data, aes(x = infant_birth_weight_kg)) +
  geom_histogram(binwidth = 0.2, fill = "green", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Infant Birth Weights", 
       x = "Birth Weight (kg)", 
       y = "Number of Infants") +
  theme_minimal()

```




*Histogram of Maternal Age*
```{r}
ggplot(PROMO_Data, aes(x = age_at_enrollment_years)) +
  geom_histogram(binwidth = 2, fill = "light blue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Maternal Age at Enrollment", 
       x = "Maternal Age (years)", 
       y = "Number of Participants") +
  theme_minimal()

```




*Histogram of Malaria Episodes Stratified by Treatment Regimen (SP vs DP)*
```{r}
ggplot(PROMO_Data, aes(x = total_malaria_episodes_during_pregnancy, fill = study_arm)) +
  geom_histogram(binwidth = 1, color = "black", alpha = 0.7, position = "identity") +
  facet_wrap(~ study_arm) +
  labs(title = "Malaria Episodes Stratified by Treatment Regimen", 
       x = "Number of Malaria Episodes", 
       y = "Frequency") +
  theme_minimal()

```







*Boxplot: Gestational Age at Delivery*
```{r}
ggplot(PROMO_Data, aes(x = study_arm, y = gestational_age_at_delivery_weeks, fill = study_arm)) +
  geom_boxplot(alpha = 0.7) +
  labs(title = "Gestational Age at Delivery by Study Arm",
       x = "Study Arm", y = "Gestational Age (weeks)") +
  theme_minimal() +
  theme(legend.position = "none")

```


*Placental Malaria Prevalence by Study Arm*
```{r}
ggplot(PROMO_Data, aes(x = placental_malaria, fill = study_arm)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(title = "Placental Malaria Prevalence by Study Arm",
       x = "Placental Malaria", y = "Count") +
  theme_minimal()

```



*Stillbirth & Neonatal Death by Study Arm*
```{r}
ggplot(PROMO_Data, aes(x = study_arm, fill = stillbirth)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(title = "Stillbirth Rates by Study Arm", x = "Study Arm", y = "Count") +
  theme_minimal()
```




```{r}
ggplot(PROMO_Data, aes(x = study_arm, fill = neonatal_death)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(title = "Neonatal Mortality by Study Arm", x = "Study Arm", y = "Count") +
  theme_minimal()

```





# Statistical Analysis

*Chi-Square Test: Study Arm vs. Stillbirth*
```{r}
table_study_stillbirth <- table(PROMO_Data$study_arm, PROMO_Data$stillbirth)
chisq.test(table_study_stillbirth)

```


*Logistic Regression: Neonatal Death Prediction*
```{r}
logit_neonatal_death <- glm(neonatal_death ~ study_arm + total_malaria_episodes_during_pregnancy + gestational_age_at_delivery_weeks, 
                            data = PROMO_Data, family = binomial)

summary(logit_neonatal_death)

```






*Directed Acyclic Graph (DAG)*
```{r}
library(ggdag)
library(dagitty)

dag <- dagitty("dag {
  'Malaria Exposure' -> 'Placental Malaria'
  'Placental Malaria' -> 'Inflammation'
  'Inflammation' -> 'Pregnancy Outcomes'
  'Malaria Exposure' -> 'Pregnancy Outcomes'
  'Pregnancy Outcomes' -> 'Neonatal Health'
  'Treatment (SP vs. DP)' -> 'Malaria Exposure'
  'Treatment (SP vs. DP)' -> 'Pregnancy Outcomes'
}")

ggdag(dag, text = TRUE, use_labels = "name") +
  theme_minimal() +
  ggtitle("Directed Acyclic Graph (DAG) of Malaria in Pregnancy and Birth Outcomes")

```





*Kaplan-Meier Survival Curve*
```{r}
PROMO_Data$surv_obj <- Surv(PROMO_Data$gestational_age_at_enrollment_weeks, 
                             PROMO_Data$total_malaria_episodes_during_pregnancy > 0)

km_fit <- survfit(surv_obj ~ study_arm, data = PROMO_Data)

ggsurvplot(km_fit, data = PROMO_Data,
           conf.int = TRUE, pval = TRUE, risk.table = TRUE,
           legend.title = "Treatment Arm",
           ggtheme = theme_minimal(),
           title = "Time to Malaria Infection During Pregnancy")

```












